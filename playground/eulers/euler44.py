import sys

print(
    """Pentagonal numbers are generated by the formula, P{n}=n(3n-1)/2. The
first ten pentagonal numbers are:
    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P{4} + P{7} = 22 + 70 = 92 = P{8}. However, their
difference, 70 - 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, P{j} and P{k}, for which their sum and
difference are pentagonal and D = |P{k} - P{j}| is minimised; what is the value
of D?

expected result: 5482660
"""
)


arr = [(i * (3*i - 1))//2 for i in range(2500)]

def is_pentagonal(val: int, low: int, high: int) -> bool:
    global arr
    if high < low:
        return False
    mid = low+(high-low)//2
    if arr[mid] > val:
        return is_pentagonal(val,low, mid-1)
    elif arr[mid] < val:
        return is_pentagonal(val, mid+1, high)
    return True


res = sys.maxsize
for i in range(1, 2500):
    for j in range(i+1, 2500):
        if is_pentagonal(arr[j]-arr[i], 0, 2499) and is_pentagonal(arr[j]+arr[i], 0, 2499) and arr[j]-arr[i] < res:
                res = arr[j] - arr[i]

print("result:", res)
